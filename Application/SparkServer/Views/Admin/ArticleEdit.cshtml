@model SparkServer.ViewModels.ArticleEditViewModel

@{
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
    ViewBag.Title = "Article Edit";
}

<h1>@ViewBag.Title</h1>

@if (Model.Mode == SparkServer.Application.Enum.EditMode.Edit)
{
    <h2>ID: @Model.ID</h2>

    <a href="/Admin/ArticleDelete?ID=@Model.ID" class="btn delete">Delete</a>
}

@using (Html.BeginForm(actionName: "ArticleUpdate", controllerName: "Admin", method: FormMethod.Post))
{
    if (Model.Mode == SparkServer.Application.Enum.EditMode.Edit)
    {
        @Html.HiddenFor(x => x.ID)
    }

    @Html.HiddenFor(x => x.Mode)

    <div class="row">
        @Html.LabelFor(x => x.Title)
        @Html.TextBoxFor(x => x.Title)
        @Html.ValidationMessageFor(x => x.Title)
    </div>

    <div class="row">
        @Html.LabelFor(x => x.Subtitle)
        @Html.TextBoxFor(x => x.Subtitle)
        @Html.ValidationMessageFor(x => x.Subtitle)
    </div>

    <div class="row">
        @Html.LabelFor(x => x.CategoryID)
        @Html.DropDownListFor(x => x.CategoryID, Model.CategorySource, htmlAttributes: new { @class = "half" })
        @Html.ValidationMessageFor(x => x.CategoryID)
    </div>

    <div class="row">
        @Html.LabelFor(x => x.SitecoreVersionID)
        @Html.DropDownListFor(x => x.SitecoreVersionID, Model.SitecoreVersionSource, htmlAttributes: new { @class = "half" })
        @Html.ValidationMessageFor(x => x.SitecoreVersionID)
    </div>

    <div class="row">
        @Html.LabelFor(x => x.Body)
        @Html.TextAreaFor(x => x.Body, htmlAttributes: new { style = "height: 400px" })
        @Html.ValidationMessageFor(x => x.Body)
    </div>

    <div class="row">
        @Html.LabelFor(x => x.PublishDate)
        @Html.TextBoxFor(x => x.PublishDate, htmlAttributes: new { @class = "half" })
        <input type="button" value="Today" id="DateTimeToday" class="btn" />
        @Html.ValidationMessageFor(x => x.PublishDate)
    </div>

    <div class="row">
        @Html.LabelFor(x => x.AuthorID)
        @Html.DropDownListFor(x => x.AuthorID, Model.AuthorSource, htmlAttributes: new { @class = "half" })
        @Html.ValidationMessageFor(x => x.AuthorID)
    </div>

    <div class="row">
        @Html.LabelFor(x => x.UniqueURL)
        @Html.TextBoxFor(x => x.UniqueURL, htmlAttributes: new { @class = "half" })
        @Html.ValidationMessageFor(x => x.UniqueURL)
    </div>

    <div class="row">
        @Html.LabelFor(x => x.SortOrder)
        @Html.TextBoxFor(x => x.SortOrder, htmlAttributes: new { @class = "quarter" })
        @Html.ValidationMessageFor(x => x.SortOrder)
    </div>

    if (Model.Mode == SparkServer.Application.Enum.EditMode.Edit)
    {
        <div class="row">
            <h2>Related Links</h2>

            @for (var i = 0; i < Model.RelatedLinks.Count; i++)
            {
                <div class="related-link-@i">
                    @Html.HiddenFor(x => x.RelatedLinks[i].ID)
                    @Html.TextBoxFor(x => x.RelatedLinks[i].Title)<br />
                    @Html.TextBoxFor(x => x.RelatedLinks[i].HREF)<br />
                    @Html.TextBoxFor(x => x.RelatedLinks[i].SortOrder)
                    @Html.HiddenFor(x => x.RelatedLinks[i].Deleted)
                    <a href="javascript://" class="delete-related-link" data-iteration="@i.ToString()">[-]</a>
                </div>
            }

            <div id="NewRelatedLink">

                @for (var i = 0; i < Model.NewRelatedLinks.Count; i++)
                {
                    <div class='new-related-link'>
                        @Html.HiddenFor(x => x.NewRelatedLinks[i].ID)
                        @Html.TextBoxFor(x => x.NewRelatedLinks[i].Title)<br />
                        @Html.TextBoxFor(x => x.NewRelatedLinks[i].HREF)<br />
                        @Html.TextBoxFor(x => x.NewRelatedLinks[i].SortOrder)
                    </div>
                }

            </div>

            <!-- TODO: [+] button that adds two textboxes -->
            <a href="javascript://" id="AddRelatedLink">Add</a>
        </div>

        <div class="row">
            <input type="submit" value="Submit" class="btn primary" />
        </div>
    }
}

@section PageScripts {

    @if (Model.Mode == SparkServer.Application.Enum.EditMode.Edit)
    {
        <script type="text/javascript">

            // TODO: keep wire-up logic here, but move internal logic to shared library

            let template = "<div class='new-related-link'>" +
                           "    <input type='text' name='NewRelatedLinks[##INDEX##].Title' id='NewRelatedLinks_##INDEX##_Title' class='new-related-links' />" +
                           "    <input type='text' name='NewRelatedLinks[##INDEX##].HREF' id='NewRelatedLink_##INDEX##_HREF' />" + 
                           "    <input type='text' name='NewRelatedLinks[##INDEX##].SortOrder' id='NewRelatedLinks_##INDEX##__SortOrder' />" +
                           "</div>";

            $(function () {

                $("#AddRelatedLink").on("click", function () {

                    var count = $(".new-related-link").length;

                    var newHTML = template.replace(new RegExp("##INDEX##", "g"), count);

                    $("#NewRelatedLink").append(newHTML);

                });

                $(".delete-related-link").on("click", function () {

                    var iteration = $(this).data("iteration");
                    var deletedField = $("#RelatedLinks_" + iteration + "__Deleted");
                    deletedField.val("true");

                    $(".related-link-" + iteration).slideUp(250);

                });

            });

        </script>
    }

}